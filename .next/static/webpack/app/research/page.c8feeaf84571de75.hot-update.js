"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/research/page",{

/***/ "(app-pages-browser)/./src/lib/gemini.ts":
/*!***************************!*\
  !*** ./src/lib/gemini.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   genAI: function() { return /* binding */ genAI; },\n/* harmony export */   searchProjectInfo: function() { return /* binding */ searchProjectInfo; }\n/* harmony export */ });\n/* harmony import */ var _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/generative-ai */ \"(app-pages-browser)/./node_modules/@google/generative-ai/dist/index.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n// 안전한 Gemini 클라이언트 생성 함수\nconst createGeminiClient = ()=>{\n    // 클라이언트 사이드에서만 실행\n    if (false) {}\n    const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;\n    if (!apiKey) {\n        console.warn(\"Gemini API key is not set\");\n        return null;\n    }\n    try {\n        return new _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.GoogleGenerativeAI(apiKey);\n    } catch (error) {\n        console.error(\"Failed to create Gemini client:\", error);\n        return null;\n    }\n};\n// Gemini 클라이언트 인스턴스\nconst genAI = createGeminiClient();\n// 프로젝트 정보 검색 함수\nasync function searchProjectInfo(projectName) {\n    if (!genAI) {\n        throw new Error(\"Gemini API is not initialized\");\n    }\n    const model = genAI.getGenerativeModel({\n        model: \"gemini-2.5-flash\"\n    });\n    const prompt = \"\\n다음 블록체인 프로젝트에 대한 정보를 정확한 JSON 형태로만 제공해주세요: \".concat(projectName, '\\n\\n다음 형식으로 응답해주세요 (다른 텍스트 없이 JSON만):\\n{\\n  \"name\": \"').concat(projectName, '\",\\n  \"token_symbol\": \"토큰 심볼 (예: ETH, BTC)\",\\n  \"description\": \"프로젝트에 대한 간단한 설명\",\\n  \"homepage_url\": \"공식 홈페이지 URL\",\\n  \"whitepaper_url\": \"백서 URL\",\\n  \"docs_url\": \"문서 URL\",\\n  \"blog_url\": \"블로그 URL\",\\n  \"project_twitter_url\": \"프로젝트 공식 트위터 URL\",\\n  \"team_twitter_urls\": [\"주요 팀원 트위터 URL 배열\"]\\n}\\n\\n찾을 수 없는 정보는 null로 설정해주세요. 반드시 유효한 JSON 형태로만 응답하세요.\\n');\n    try {\n        const result = await model.generateContent(prompt);\n        const response = await result.response;\n        let text = response.text().trim();\n        // JSON 블록에서 JSON만 추출\n        if (text.includes(\"```json\")) {\n            text = text.replace(/```json\\s*/, \"\").replace(/```\\s*$/, \"\");\n        }\n        if (text.includes(\"```\")) {\n            text = text.replace(/```\\s*/, \"\").replace(/```\\s*$/, \"\");\n        }\n        // JSON 파싱\n        const projectInfo = JSON.parse(text);\n        // 기본값 설정\n        return {\n            name: projectInfo.name || projectName,\n            token_symbol: projectInfo.token_symbol || null,\n            description: projectInfo.description || null,\n            homepage_url: projectInfo.homepage_url || null,\n            whitepaper_url: projectInfo.whitepaper_url || null,\n            docs_url: projectInfo.docs_url || null,\n            blog_url: projectInfo.blog_url || null,\n            project_twitter_url: projectInfo.project_twitter_url || null,\n            team_twitter_urls: projectInfo.team_twitter_urls || null\n        };\n    } catch (error) {\n        console.error(\"Error searching project info:\", error);\n        // 기본 프로젝트 정보 반환 (AI 실패 시)\n        return {\n            name: projectName,\n            token_symbol: null,\n            description: \"\".concat(projectName, \" 프로젝트에 대한 정보를 자동으로 수집할 수 없었습니다. 수동으로 정보를 입력해주세요.\"),\n            homepage_url: null,\n            whitepaper_url: null,\n            docs_url: null,\n            blog_url: null,\n            project_twitter_url: null,\n            team_twitter_urls: null\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvZ2VtaW5pLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEQ7QUFFMUQseUJBQXlCO0FBQ3pCLE1BQU1DLHFCQUFxQjtJQUN6QixrQkFBa0I7SUFDbEIsSUFBSSxLQUFrQixFQUFhLEVBRWxDO0lBRUQsTUFBTUMsU0FBU0MsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDQywwQkFBMEI7SUFFckQsSUFBSSxDQUFDSCxRQUFRO1FBQ1hJLFFBQVFDLElBQUksQ0FBQztRQUNiLE9BQU87SUFDVDtJQUVBLElBQUk7UUFDRixPQUFPLElBQUlQLHFFQUFrQkEsQ0FBQ0U7SUFDaEMsRUFBRSxPQUFPTSxPQUFPO1FBQ2RGLFFBQVFFLEtBQUssQ0FBQyxtQ0FBbUNBO1FBQ2pELE9BQU87SUFDVDtBQUNGO0FBRUEsb0JBQW9CO0FBQ2IsTUFBTUMsUUFBUVIscUJBQW9CO0FBRXpDLGdCQUFnQjtBQUNULGVBQWVTLGtCQUFrQkMsV0FBbUI7SUFDekQsSUFBSSxDQUFDRixPQUFPO1FBQ1YsTUFBTSxJQUFJRyxNQUFNO0lBQ2xCO0lBRUEsTUFBTUMsUUFBUUosTUFBTUssa0JBQWtCLENBQUM7UUFBRUQsT0FBTztJQUFtQjtJQUVuRSxNQUFNRSxTQUFTLGdEQUtKSixPQUpnQ0EsYUFBWSx5REFJaEMsT0FBWkEsYUFBWTtJQWN2QixJQUFJO1FBQ0YsTUFBTUssU0FBUyxNQUFNSCxNQUFNSSxlQUFlLENBQUNGO1FBQzNDLE1BQU1HLFdBQVcsTUFBTUYsT0FBT0UsUUFBUTtRQUN0QyxJQUFJQyxPQUFPRCxTQUFTQyxJQUFJLEdBQUdDLElBQUk7UUFFL0IscUJBQXFCO1FBQ3JCLElBQUlELEtBQUtFLFFBQVEsQ0FBQyxZQUFZO1lBQzVCRixPQUFPQSxLQUFLRyxPQUFPLENBQUMsY0FBYyxJQUFJQSxPQUFPLENBQUMsV0FBVztRQUMzRDtRQUNBLElBQUlILEtBQUtFLFFBQVEsQ0FBQyxRQUFRO1lBQ3hCRixPQUFPQSxLQUFLRyxPQUFPLENBQUMsVUFBVSxJQUFJQSxPQUFPLENBQUMsV0FBVztRQUN2RDtRQUVBLFVBQVU7UUFDVixNQUFNQyxjQUFjQyxLQUFLQyxLQUFLLENBQUNOO1FBRS9CLFNBQVM7UUFDVCxPQUFPO1lBQ0xPLE1BQU1ILFlBQVlHLElBQUksSUFBSWY7WUFDMUJnQixjQUFjSixZQUFZSSxZQUFZLElBQUk7WUFDMUNDLGFBQWFMLFlBQVlLLFdBQVcsSUFBSTtZQUN4Q0MsY0FBY04sWUFBWU0sWUFBWSxJQUFJO1lBQzFDQyxnQkFBZ0JQLFlBQVlPLGNBQWMsSUFBSTtZQUM5Q0MsVUFBVVIsWUFBWVEsUUFBUSxJQUFJO1lBQ2xDQyxVQUFVVCxZQUFZUyxRQUFRLElBQUk7WUFDbENDLHFCQUFxQlYsWUFBWVUsbUJBQW1CLElBQUk7WUFDeERDLG1CQUFtQlgsWUFBWVcsaUJBQWlCLElBQUk7UUFDdEQ7SUFDRixFQUFFLE9BQU8xQixPQUFPO1FBQ2RGLFFBQVFFLEtBQUssQ0FBQyxpQ0FBaUNBO1FBRS9DLDBCQUEwQjtRQUMxQixPQUFPO1lBQ0xrQixNQUFNZjtZQUNOZ0IsY0FBYztZQUNkQyxhQUFhLEdBQWUsT0FBWmpCLGFBQVk7WUFDNUJrQixjQUFjO1lBQ2RDLGdCQUFnQjtZQUNoQkMsVUFBVTtZQUNWQyxVQUFVO1lBQ1ZDLHFCQUFxQjtZQUNyQkMsbUJBQW1CO1FBQ3JCO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGliL2dlbWluaS50cz85OTRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdvb2dsZUdlbmVyYXRpdmVBSSB9IGZyb20gJ0Bnb29nbGUvZ2VuZXJhdGl2ZS1haSdcclxuXHJcbi8vIOyViOyghO2VnCBHZW1pbmkg7YG065287J207Ja47Yq4IOyDneyEsSDtlajsiJhcclxuY29uc3QgY3JlYXRlR2VtaW5pQ2xpZW50ID0gKCkgPT4ge1xyXG4gIC8vIO2BtOudvOydtOyWuO2KuCDsgqzsnbTrk5zsl5DshJzrp4wg7Iuk7ZaJXHJcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICByZXR1cm4gbnVsbFxyXG4gIH1cclxuICBcclxuICBjb25zdCBhcGlLZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19HRU1JTklfQVBJX0tFWVxyXG4gIFxyXG4gIGlmICghYXBpS2V5KSB7XHJcbiAgICBjb25zb2xlLndhcm4oJ0dlbWluaSBBUEkga2V5IGlzIG5vdCBzZXQnKVxyXG4gICAgcmV0dXJuIG51bGxcclxuICB9XHJcbiAgXHJcbiAgdHJ5IHtcclxuICAgIHJldHVybiBuZXcgR29vZ2xlR2VuZXJhdGl2ZUFJKGFwaUtleSlcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBHZW1pbmkgY2xpZW50OicsIGVycm9yKVxyXG4gICAgcmV0dXJuIG51bGxcclxuICB9XHJcbn1cclxuXHJcbi8vIEdlbWluaSDtgbTrnbzsnbTslrjtirgg7J247Iqk7YS07IqkXHJcbmV4cG9ydCBjb25zdCBnZW5BSSA9IGNyZWF0ZUdlbWluaUNsaWVudCgpXHJcblxyXG4vLyDtlITroZzsoJ3tirgg7KCV67O0IOqygOyDiSDtlajsiJhcclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNlYXJjaFByb2plY3RJbmZvKHByb2plY3ROYW1lOiBzdHJpbmcpIHtcclxuICBpZiAoIWdlbkFJKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0dlbWluaSBBUEkgaXMgbm90IGluaXRpYWxpemVkJylcclxuICB9XHJcblxyXG4gIGNvbnN0IG1vZGVsID0gZ2VuQUkuZ2V0R2VuZXJhdGl2ZU1vZGVsKHsgbW9kZWw6ICdnZW1pbmktMi41LWZsYXNoJyB9KVxyXG5cclxuICBjb25zdCBwcm9tcHQgPSBgXHJcbuuLpOydjCDruJTroZ3ssrTsnbgg7ZSE66Gc7KCd7Yq47JeQIOuMgO2VnCDsoJXrs7Trpbwg7KCV7ZmV7ZWcIEpTT04g7ZiV7YOc66Gc66eMIOygnOqzte2VtOyjvOyEuOyalDogJHtwcm9qZWN0TmFtZX1cclxuXHJcbuuLpOydjCDtmJXsi53snLzroZwg7J2R64u17ZW07KO87IS47JqUICjri6Trpbgg7YWN7Iqk7Yq4IOyXhuydtCBKU09O66eMKTpcclxue1xyXG4gIFwibmFtZVwiOiBcIiR7cHJvamVjdE5hbWV9XCIsXHJcbiAgXCJ0b2tlbl9zeW1ib2xcIjogXCLthqDtgbAg7Ius67O8ICjsmIg6IEVUSCwgQlRDKVwiLFxyXG4gIFwiZGVzY3JpcHRpb25cIjogXCLtlITroZzsoJ3tirjsl5Ag64yA7ZWcIOqwhOuLqO2VnCDshKTrqoVcIixcclxuICBcImhvbWVwYWdlX3VybFwiOiBcIuqzteyLnSDtmYjtjpjsnbTsp4AgVVJMXCIsXHJcbiAgXCJ3aGl0ZXBhcGVyX3VybFwiOiBcIuuwseyEnCBVUkxcIixcclxuICBcImRvY3NfdXJsXCI6IFwi66y47IScIFVSTFwiLFxyXG4gIFwiYmxvZ191cmxcIjogXCLruJTroZzqt7ggVVJMXCIsXHJcbiAgXCJwcm9qZWN0X3R3aXR0ZXJfdXJsXCI6IFwi7ZSE66Gc7KCd7Yq4IOqzteyLnSDtirjsnITthLAgVVJMXCIsXHJcbiAgXCJ0ZWFtX3R3aXR0ZXJfdXJsc1wiOiBbXCLso7zsmpQg7YyA7JuQIO2KuOychO2EsCBVUkwg67Cw7Je0XCJdXHJcbn1cclxuXHJcbuywvuydhCDsiJgg7JeG64qUIOygleuztOuKlCBudWxs66GcIOyEpOygle2VtOyjvOyEuOyalC4g67CY65Oc7IucIOycoO2aqO2VnCBKU09OIO2Yle2DnOuhnOunjCDsnZHri7XtlZjshLjsmpQuXHJcbmBcclxuXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG1vZGVsLmdlbmVyYXRlQ29udGVudChwcm9tcHQpXHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHJlc3VsdC5yZXNwb25zZVxyXG4gICAgbGV0IHRleHQgPSByZXNwb25zZS50ZXh0KCkudHJpbSgpXHJcbiAgICBcclxuICAgIC8vIEpTT04g67iU66Gd7JeQ7IScIEpTT07rp4wg7LaU7LacXHJcbiAgICBpZiAodGV4dC5pbmNsdWRlcygnYGBganNvbicpKSB7XHJcbiAgICAgIHRleHQgPSB0ZXh0LnJlcGxhY2UoL2BgYGpzb25cXHMqLywgJycpLnJlcGxhY2UoL2BgYFxccyokLywgJycpXHJcbiAgICB9XHJcbiAgICBpZiAodGV4dC5pbmNsdWRlcygnYGBgJykpIHtcclxuICAgICAgdGV4dCA9IHRleHQucmVwbGFjZSgvYGBgXFxzKi8sICcnKS5yZXBsYWNlKC9gYGBcXHMqJC8sICcnKVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBKU09OIO2MjOyLsVxyXG4gICAgY29uc3QgcHJvamVjdEluZm8gPSBKU09OLnBhcnNlKHRleHQpXHJcbiAgICBcclxuICAgIC8vIOq4sOuzuOqwkiDshKTsoJVcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5hbWU6IHByb2plY3RJbmZvLm5hbWUgfHwgcHJvamVjdE5hbWUsXHJcbiAgICAgIHRva2VuX3N5bWJvbDogcHJvamVjdEluZm8udG9rZW5fc3ltYm9sIHx8IG51bGwsXHJcbiAgICAgIGRlc2NyaXB0aW9uOiBwcm9qZWN0SW5mby5kZXNjcmlwdGlvbiB8fCBudWxsLFxyXG4gICAgICBob21lcGFnZV91cmw6IHByb2plY3RJbmZvLmhvbWVwYWdlX3VybCB8fCBudWxsLFxyXG4gICAgICB3aGl0ZXBhcGVyX3VybDogcHJvamVjdEluZm8ud2hpdGVwYXBlcl91cmwgfHwgbnVsbCxcclxuICAgICAgZG9jc191cmw6IHByb2plY3RJbmZvLmRvY3NfdXJsIHx8IG51bGwsXHJcbiAgICAgIGJsb2dfdXJsOiBwcm9qZWN0SW5mby5ibG9nX3VybCB8fCBudWxsLFxyXG4gICAgICBwcm9qZWN0X3R3aXR0ZXJfdXJsOiBwcm9qZWN0SW5mby5wcm9qZWN0X3R3aXR0ZXJfdXJsIHx8IG51bGwsXHJcbiAgICAgIHRlYW1fdHdpdHRlcl91cmxzOiBwcm9qZWN0SW5mby50ZWFtX3R3aXR0ZXJfdXJscyB8fCBudWxsXHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNlYXJjaGluZyBwcm9qZWN0IGluZm86JywgZXJyb3IpXHJcbiAgICBcclxuICAgIC8vIOq4sOuzuCDtlITroZzsoJ3tirgg7KCV67O0IOuwmO2ZmCAoQUkg7Iuk7YyoIOyLnClcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5hbWU6IHByb2plY3ROYW1lLFxyXG4gICAgICB0b2tlbl9zeW1ib2w6IG51bGwsXHJcbiAgICAgIGRlc2NyaXB0aW9uOiBgJHtwcm9qZWN0TmFtZX0g7ZSE66Gc7KCd7Yq47JeQIOuMgO2VnCDsoJXrs7Trpbwg7J6Q64+Z7Jy866GcIOyImOynke2VoCDsiJgg7JeG7JeI7Iq164uI64ukLiDsiJjrj5nsnLzroZwg7KCV67O066W8IOyeheugpe2VtOyjvOyEuOyalC5gLFxyXG4gICAgICBob21lcGFnZV91cmw6IG51bGwsXHJcbiAgICAgIHdoaXRlcGFwZXJfdXJsOiBudWxsLFxyXG4gICAgICBkb2NzX3VybDogbnVsbCxcclxuICAgICAgYmxvZ191cmw6IG51bGwsXHJcbiAgICAgIHByb2plY3RfdHdpdHRlcl91cmw6IG51bGwsXHJcbiAgICAgIHRlYW1fdHdpdHRlcl91cmxzOiBudWxsXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJHb29nbGVHZW5lcmF0aXZlQUkiLCJjcmVhdGVHZW1pbmlDbGllbnQiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfR0VNSU5JX0FQSV9LRVkiLCJjb25zb2xlIiwid2FybiIsImVycm9yIiwiZ2VuQUkiLCJzZWFyY2hQcm9qZWN0SW5mbyIsInByb2plY3ROYW1lIiwiRXJyb3IiLCJtb2RlbCIsImdldEdlbmVyYXRpdmVNb2RlbCIsInByb21wdCIsInJlc3VsdCIsImdlbmVyYXRlQ29udGVudCIsInJlc3BvbnNlIiwidGV4dCIsInRyaW0iLCJpbmNsdWRlcyIsInJlcGxhY2UiLCJwcm9qZWN0SW5mbyIsIkpTT04iLCJwYXJzZSIsIm5hbWUiLCJ0b2tlbl9zeW1ib2wiLCJkZXNjcmlwdGlvbiIsImhvbWVwYWdlX3VybCIsIndoaXRlcGFwZXJfdXJsIiwiZG9jc191cmwiLCJibG9nX3VybCIsInByb2plY3RfdHdpdHRlcl91cmwiLCJ0ZWFtX3R3aXR0ZXJfdXJscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/gemini.ts\n"));

/***/ })

});